plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def flutterMinSdkVersion = localProperties.getProperty('flutter.minSdkVersion')
if (flutterMinSdkVersion == null) {
    flutterMinSdkVersion = 23
}
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
   keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.setes.erpsetes"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.setes.erpsetes"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutterMinSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }    
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    afterEvaluate {
        // Use println para exibir mensagens no console 
        println("Configuracoes de assinatura:")
        println("StoreFile: ${signingConfigs.release.storeFile}")
        println("StorePassword: ${signingConfigs.release.storePassword}")
        println("KeyAlias: ${signingConfigs.release.keyAlias}")
        println("KeyPassword: ${signingConfigs.release.keyPassword}")
    }   
}

flutter {
    source '../..'
}

// Firebase and Google Play Services dependencies
dependencies {
    // Firebase BOM
    implementation platform("com.google.firebase:firebase-bom:32.7.2")
    // Firebase dependencies
    implementation "com.google.firebase:firebase-auth"
    implementation "com.google.android.gms:play-services-auth:20.7.0"
    implementation 'com.google.android.gms:play-services-ads:22.6.0'
    
    // Firebase Analytics
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-analytics"
}

